package view

import (
	"fmt"
	"math"

	"github.com/wolv89/gotnsapp/model"
)


templ MatchesView(matches []model.Match, rounds [][]int) {

	<div class="matches" id="matches">
		for r, round := range rounds {
			<div class={ fmt.Sprintf("round round-of-%v", int(math.Pow(2.0, float64(len(rounds) - r - 1)))) }>
				for _, m := range round {
					<div class="match-slot">
						@MatchView(matches[m])
					</div>
				}
			</div>
		}
	</div>
}


templ MatchView(match model.Match) {

	<article class={"match", match.GetStatusSlug()} id={ fmt.Sprintf("match-%d", match.Id) }>
		<div class="match-header">
			<h6 class="match-round">{ match.GetRoundName() }</h6>
			<p class="match-status">{ match.GetStatus() }</p>
		</div>
		<div class="match-body">
			<div class="match-sep">vs</div>
			<div class="match-entrants">
				<div class={"match-entrant", "match-entrant-1", templ.KV("is-winner", match.Winner == 1)}>
					@templ.Raw(model.GetEntrantName(match.Entrant1))
				</div>
				<div class={"match-entrant", "match-entrant-2", templ.KV("is-winner", match.Winner == 2)}>
					@templ.Raw(model.GetEntrantName(match.Entrant2))
				</div>
			</div>
			<div class="match-score">
				if len(match.Score) > 0 {
					<p>{ match.Score }</p>
				} else {
					<p class="void">0-0</p>
				}
			</div>
		</div>
		if len(match.Notes) > 0 || len(match.Start) > 0 {
			<div class="match-footer">
				<div class="match-notes">
					if len(match.Notes) > 0 {
						<p>{ match.Notes }</p>
					}
				</div>
				<div class="match-start">
					if len(match.Start) > 0 {
						<p>{ match.Start }</p>
					}
				</div>
			</div>
		}
	</article>

}